
SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

CREATE EXTENSION IF NOT EXISTS "pg_net" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgsodium" WITH SCHEMA "pgsodium";

CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";

CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";

CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";

SET default_tablespace = '';

SET default_table_access_method = "heap";

CREATE TABLE IF NOT EXISTS "public"."artist" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" "text"
);

ALTER TABLE "public"."artist" OWNER TO "postgres";

ALTER TABLE "public"."artist" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."interpret_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."label" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" "text"
);

ALTER TABLE "public"."label" OWNER TO "postgres";

ALTER TABLE "public"."label" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."label_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."record" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "title" "text"
);

ALTER TABLE "public"."record" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."release" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" "text",
    "record_id" bigint,
    "label_id" bigint,
    "artist_id" bigint,
    "release_date" "date",
    "price" real,
    "delivery_date" "date",
    "pieces" smallint
);

ALTER TABLE "public"."release" OWNER TO "postgres";

ALTER TABLE "public"."release" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."release_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."track" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" "text",
    "side" "text" DEFAULT ''::"text",
    "length" integer,
    "rating" smallint,
    "record_id" bigint
);

ALTER TABLE "public"."track" OWNER TO "postgres";

ALTER TABLE "public"."track" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."track_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE "public"."record" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."vinyl_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE ONLY "public"."artist"
    ADD CONSTRAINT "interpret_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."label"
    ADD CONSTRAINT "label_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."release"
    ADD CONSTRAINT "release_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."track"
    ADD CONSTRAINT "track_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."record"
    ADD CONSTRAINT "vinyl_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."release"
    ADD CONSTRAINT "release_artist_id_fkey" FOREIGN KEY ("artist_id") REFERENCES "public"."artist"("id");

ALTER TABLE ONLY "public"."release"
    ADD CONSTRAINT "release_label_id_fkey" FOREIGN KEY ("label_id") REFERENCES "public"."label"("id");

ALTER TABLE ONLY "public"."release"
    ADD CONSTRAINT "release_record_id_fkey" FOREIGN KEY ("record_id") REFERENCES "public"."record"("id");

ALTER TABLE ONLY "public"."track"
    ADD CONSTRAINT "track_record_id_fkey" FOREIGN KEY ("record_id") REFERENCES "public"."record"("id");

CREATE POLICY "Enable insert for authenticated users only" ON "public"."record" FOR INSERT TO "authenticated" WITH CHECK (true);

CREATE POLICY "Enable insert for authenticated users only" ON "public"."track" FOR INSERT TO "authenticated" WITH CHECK (true);

CREATE POLICY "Enable select for authenticated users only" ON "public"."artist" FOR SELECT TO "authenticated" USING (true);

CREATE POLICY "Enable select for authenticated users only" ON "public"."label" FOR SELECT TO "authenticated" USING (true);

CREATE POLICY "Enable select for authenticated users only" ON "public"."record" FOR SELECT TO "authenticated" USING (true);

CREATE POLICY "Enable select for authenticated users only" ON "public"."release" FOR SELECT TO "authenticated" USING (true);

CREATE POLICY "Enable select for authenticated users only" ON "public"."track" FOR SELECT TO "authenticated" USING (true);

ALTER TABLE "public"."artist" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."label" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."record" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."release" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."track" ENABLE ROW LEVEL SECURITY;

GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";

GRANT ALL ON TABLE "public"."artist" TO "anon";
GRANT ALL ON TABLE "public"."artist" TO "authenticated";
GRANT ALL ON TABLE "public"."artist" TO "service_role";

GRANT ALL ON SEQUENCE "public"."interpret_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."interpret_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."interpret_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."label" TO "anon";
GRANT ALL ON TABLE "public"."label" TO "authenticated";
GRANT ALL ON TABLE "public"."label" TO "service_role";

GRANT ALL ON SEQUENCE "public"."label_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."label_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."label_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."record" TO "anon";
GRANT ALL ON TABLE "public"."record" TO "authenticated";
GRANT ALL ON TABLE "public"."record" TO "service_role";

GRANT ALL ON TABLE "public"."release" TO "anon";
GRANT ALL ON TABLE "public"."release" TO "authenticated";
GRANT ALL ON TABLE "public"."release" TO "service_role";

GRANT ALL ON SEQUENCE "public"."release_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."release_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."release_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."track" TO "anon";
GRANT ALL ON TABLE "public"."track" TO "authenticated";
GRANT ALL ON TABLE "public"."track" TO "service_role";

GRANT ALL ON SEQUENCE "public"."track_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."track_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."track_id_seq" TO "service_role";

GRANT ALL ON SEQUENCE "public"."vinyl_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."vinyl_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."vinyl_id_seq" TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";

RESET ALL;
